"""
# 풀이: 그리디
각 자리를 돌면서 빈 컵홀더를 선택하면 최대한 많은 사람이 컵홀더를 선택하게 만들 수 있다.
이때 왼쪽부터 하나씩 빈 컵홀더를 선택하도록 그리디를 짤 수 있다.

그런데 어느 방향부터 빈 컵홀더를 선택하든, 최적해는 모든 컵홀더를 점유중인 상태이다.
따라서 컵홀더를 모두 배치한 후 컵홀더의 개수만 세어 주면 된다.

단, 컵홀더의 개수가 좌석 수보다 많을 수 있는데(ex. SSS = *S*S*S*),
이 경우는 좌석 수를 출력해 주면 된다.

# 이 문제가 그리디인 이유

- 탐욕적 선택 특성
컵홀더의 개수가 좌석 수 보다 많은 경우, 어떤 컵홀더를 선택하든 최대 개수는 동일하다.
(*SxSx == xS*Sx)
컵홀더의 개수가 좌석 수보다 작거나 같은 경우 해는 하나 뿐이고 이는 모든 컵홀더를 선택하는 경우이다.

- 최적 부분 구조
좌석을 추가했을 때 추가되는 컵홀더 개수만큼이 최대 선택 가능한 컵홀더 개수이다.
"""
seat_count = int(input())
seats = input()

seats = seats.replace('S', '*S*')
seats = seats.replace('LL', '*LL*')
seats = seats.replace('**', '*')

cup_count = seats.count('*')
print(seat_count if cup_count > seat_count else cup_count)
 